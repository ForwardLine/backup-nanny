{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "GithubAccount": {
        "Type": "String",
        "Description": "The Github account or Organmization you forked this BackupNanny project to"
    },
    "Repo": {
        "Type": "String"
    },
    "Branch": {
        "Type": "String"
    },
    "FLAWSBucket": {
        "Type": "String"
    },
    "Environment": {
        "Type": "String",
        "Description": "Current environment for this version of BackupNanny"
    },
    "BackupAmiKey": {
        "Type": "String",
        "Description": "Tag Key that should be added to EC2 instance that AMICreaor and AMICleanup Lambda functions will query for",
        "Default": "AMI-Backup"
    },
    "BackupAmiValue": {
        "Type": "String",
        "Description": "Tag Value that should be added to EC2 instance that AMICreaor and AMICleanup Lambda functions will query for",
        "Default": "True"
    },
    "BackupAmiScheduleExpression": {
        "Type": "String",
        "Description": "Cron or Rate expression to use by AMIBackup Lambda function. Default set to Saturday 1:00 am Pacific Daylight Time. For reference: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
        "Default": "cron(0 8 ? * SAT *)"
    },
    "CleanupAmiScheduleExpression": {
        "Type": "String",
        "Description": "Cron or Rate expression to use by AMICleanup Lambda function. Default set to Saturday 1:00 am Pacific Daylight Time. For reference: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
        "Default": "cron(0 8 ? * SAT *)"
    },
    "ProductionEnvironment": {
        "Type": "String",
        "Description": "Current environment for this version of BackupNanny"
    },
    "PAT": {
        "Type": "String",
        "Description": "Github Personal Access Token. This is used to generate a webhook for the Pipeline so that changes to your repo will trigger the pipeline to release the change",
        "NoEcho": true
    },
    "ApplicationName": {
      "Type": "String",
      "Description": "Enter the name of your application",
      "Default": "BackupNanny"
    },
    "CodeBuildImage": {
      "Default": "aws/codebuild/python:3.7.1",
      "Type": "String",
      "Description": "Name of codebuild image to use."
    },
    "IsSendEmailsEnabled": {
      "Description": "if this is set to \"True\" then emails will be sent when errors occur via SES",
      "Type": "String",
      "Default": "True"
    },
    "TargetEmails": {
      "Description": "Comma delimited string of emails to send emails to when problems occur e.g. email1@test.com,email2@test.com",
      "Type": "String"
    },
    "SourceEmail": {
      "Description": "AWS SES validated email in your AWS account to send the alerts as",
      "Type": "String"
    },
    "TTLAmiCleanup": {
      "Description": "Mumber of days a BackupNanny backed-up AMI and set of snapshots should live. If more days have passed then this number, the AMI and Snapshots be deleted next time the CLEANUP_AMI Lambda function runs. Default is set to a fortnight, (two weeks).",
      "Type": "String",
      "Default": "14"
    },
    "CreateAmiScheduleExpression": {
      "Description": "cron or rate AWS expression. E.g. cron(0 8 ? * SAT *) will run every Saturday at 1:00 am Pacific time",
      "Type": "String",
      "Default": "cron(0 8 ? * SAT *)"
    },
    "CleanupAmiScheduleExpression": {
      "Description": "cron or rate AWS expression. E.g. cron(0 8 ? * SAT *) will run every Saturday at 1:00 am Pacific time",
      "Type": "String",
      "Default": "cron(0 8 ? * SAT *)"
    }
  },
  "Resources": {
    "ApplicationBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "CodeBuildRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codebuild.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "CodeBuildPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CodeBuildPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:PutObject"
              ],
              "Resource": "arn:aws:s3:::*",
              "Effect": "Allow"
            },
            {
                  "Action": [
                    "ssm:GetParameters"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationName}Application-${Environment}/*"
                  },
                  "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodeBuildRole"
          }
        ]
      }
    },
    "AppPackageBuild": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": {
            "Ref": "CodeBuildImage"
          },
          "Type": "LINUX_CONTAINER",
          "EnvironmentVariables": [
            {
              "Name": "APP_BUCKET",
              "Value": {
                "Ref": "ApplicationBucket"
              }
            },
            {
              "Name": "STACK_NAME",
              "Value": {
                "Fn::Sub": "${ApplicationName}-${Environment}"
              }
            },
            {
              "Name": "PRODUCTION_ENVIRONMENT",
              "Value": {
                "Ref": "ProductionEnvironment"
              }
            },
            {
              "Name": "BACKUP_AMI_KEY",
              "Value": {
                "Ref": "BackupAmiKey"
              }
            },
            {
              "Name": "BACKUP_AMI_VALUE",
              "Value": {
                "Ref": "BackupAmiValue"
              }
            },
            {
              "Name": "BACKUP_AMI_SCHEDULE_EXPRESSION",
              "Value": {
                "Ref": "BackupAmiScheduleExpression"
              }
            },
            {
              "Name": "CLEANUP_AMI_SCHEDULE_EXPRESSION",
              "Value": {
                "Ref": "CleanupAmiScheduleExpression"
              }
            },
            {
              "Name": "TTL_AMI_CLEANUP",
              "Value": {
                "Ref": "TTLAmiCleanup"
              }
            },
            {
              "Name": "IS_SEND_EMAILS_ENABLED",
              "Value": {
                "Ref": "IsSendEmailsEnabled"
              }
            },
            {
              "Name": "TARGET_EMAILS",
              "Value": {
                "Ref": "TargetEmails"
              }
            },
            {
              "Name": "SOURCE_EMAIL",
              "Value": {
                "Ref": "SourceEmail"
              }
            },
            {
              "Name": "ENVIRONMENT",
              "Value": {
                "Ref": "Environment"
              }
            }
          ]
        },
        "Name": {
          "Fn::Sub": "${ApplicationName}Build-${Environment}"
        },
        "ServiceRole": {
          "Fn::GetAtt": "CodeBuildRole.Arn"
        },
        "Source": {
          "Type": "CODEPIPELINE",
          "BuildSpec": "buildlib/buildspec.yml"
        },
        "SecondarySources": [
            {
                "Location" : {
                    "Fn::Sub": "${FLAWSBucket}/latest.zip"
                },
                "Type" : "S3",
                "SourceIdentifier": "infra"
            }
        ]
      }
    },
    "AppPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Fn::Sub": "${ApplicationName}Pipeline-${Environment}"
        },
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "ArtifactBucketStore"
          }
        },
        "RoleArn": {
          "Fn::GetAtt": "CodePipelineRole.Arn"
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Version": 1,
                  "Provider": "GitHub"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GithubAccount"
                  },
                  "Repo": {
                    "Ref": "Repo"
                  },
                  "Branch": {
                    "Ref": "Branch"
                  },
                  "OAuthToken": {
                    "Ref": "PAT"
                  },
                  "PollForSourceChanges": false
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceRepo"
                  }
                ],
                "RunOrder": 1,
                "Name": "Source"
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "InputArtifacts": [
                  {
                    "Name": "SourceRepo"
                  }
                ],
                "Name": "CodeBuild",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CodeBuild"
                },
                "OutputArtifacts": [
                  {
                    "Name": "CompiledCFNTemplate"
                  }
                ],
                "Configuration": {
                  "ProjectName": {
                    "Ref": "AppPackageBuild"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "CreateChangeset",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [
                  {
                    "Name": "CompiledCFNTemplate"
                  }
                ],
                "Name": "CreateChangeSet",
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "ChangeSetName": {
                    "Fn::Sub": "${ApplicationName}-${Environment}-ChangeSet"
                  },
                  "RoleArn": {
                    "Fn::GetAtt": "CFNDeployRole.Arn"
                  },
                  "Capabilities": "CAPABILITY_IAM",
                  "StackName": {
                    "Fn::Sub": "${ApplicationName}-${Environment}"
                  },
                  "TemplatePath": "CompiledCFNTemplate::template.json"
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "DeployChangeset",
            "Actions": [
              {
                "RunOrder": 1,
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CloudFormation"
                },
                "Configuration": {
                  "StackName": {
                    "Fn::Sub": "${ApplicationName}-${Environment}"
                  },
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": {
                    "Fn::Sub": "${ApplicationName}-${Environment}-ChangeSet"
                  },
                  "OutputFileName": "StackOutputs.json"
                },
                "Name": "ExecuteChangeSet",
                "OutputArtifacts": [
                  {
                    "Name": "AWSDeploymentValues"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "ArtifactBucketStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "CodePipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "DefaultPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning",
                    "s3:CreateBucket",
                    "s3:PutObject",
                    "s3:PutBucketVersioning"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:UploadArchive"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "cloudwatch:*",
                    "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "cloudformation:CreateStack",
                    "cloudformation:DeleteStack",
                    "cloudformation:DescribeStacks",
                    "cloudformation:UpdateStack",
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DeleteChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:SetStackPolicy",
                    "cloudformation:ValidateTemplate",
                    "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codebuild:BatchGetBuilds",
                    "codebuild:StartBuild"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "CFNDeployRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "DeployAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "*",
                  "Resource": "*",
                  "Effect": "Allow"
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudformation.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "Webhook": {
      "Type" : "AWS::CodePipeline::Webhook",
      "Properties" : {
        "Authentication" : "GITHUB_HMAC",
        "AuthenticationConfiguration" : {
            "SecretToken": {
                "Ref": "PAT"
            }
        },
        "Filters" : [
            {
                "JsonPath" : "$.ref",
                "MatchEquals" : "refs/heads/{Branch}"
            }
        ],
        "RegisterWithThirdParty" : true,
        "TargetAction" : "Source",
        "TargetPipeline" : {
            "Ref": "AppPipeline"
        },
        "TargetPipelineVersion" : {
            "Fn::GetAtt": "AppPipeline.Version"
        }
      }
    }
  },
  "Outputs": {
    "S3ApplicationBucket": {
      "Value": {
        "Ref": "ApplicationBucket"
      }
    },
    "CodeBuildRoleArn": {
      "Value": {
        "Fn::GetAtt": "CodeBuildRole.Arn"
      }
    },
    "S3PipelineBucket": {
      "Value": {
        "Ref": "ArtifactBucketStore"
      }
    },
    "CodePipelineRoleArn": {
      "Value": {
        "Fn::GetAtt": "CodePipelineRole.Arn"
      }
    },
    "CFNDeployRoleArn": {
      "Value": {
        "Fn::GetAtt": "CFNDeployRole.Arn"
      }
    }
  }
}
